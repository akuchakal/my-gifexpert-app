{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cts","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","d","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFectGifs","img","key","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QARrB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCd,SAACA,GAAc,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAkBrC,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAIGqB,EDlB2BK,CAAY1B,GAAhCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QAEtB,OACI,oCACI,4BAAKpB,GACJoB,GAAW,sCACZ,yBAAKJ,UAAU,aACVH,EAAOJ,KAAI,SAAAkB,GAAG,OACX,kBAAC,EAAD,eACIC,IAAKD,EAAIhB,IACLgB,UEXfE,EAAe,WAAM,MAIM3C,mBAAS,CAAC,cAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAU9B,OACI,oCACI,2CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ6C,EAAWrB,KACP,SAAAsB,GAAC,OAAI,kBAAC,EAAD,CACDH,IAAKG,EACL/B,SAAU+B,UCnBtCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.967c35fa.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cts => [inputValue, ...cts]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3BJTMUhQL5oWqjQ9u5zClYc36Qkw6hao`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(d => {\r\n        return {\r\n            id: d.id,\r\n            title: d.title,\r\n            url: d.images?.downsized_medium.url\r\n        }\r\n    });\r\n    // setImages(gifs);\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useFectGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFectGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// Los custom hooks\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFectGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]); //<== cada ves que cambie esta prop, se ejecutara lo de adentro de lo contrario solo lo hara una ves\r\n\r\n\r\n\r\n    return state;\r\n};","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'Overlord'] );\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(\r\n                        c => <GifGrid\r\n                            key={c}\r\n                            category={c} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n//GifExpertApp"],"sourceRoot":""}